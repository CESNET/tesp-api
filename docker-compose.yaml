version: '3.8'

services:
  tesp-api:
    build:
      context: ./
      dockerfile: docker/tesp_api/Dockerfile
      target: development
    image: tesp-api
    environment:
      - CONTAINER_TYPE=docker  # Set to "docker", "singularity", or "both"
    container_name: tesp-api
    privileged: true
    ports:
      - "8080:8080"
    depends_on:
      - tesp-db
    volumes:
      - ./:/app
      - /opt/pysetup/files/staging/:/opt/pysetup/files/staging/
      #    extra_hosts:
      #      - "host.docker.internal:host-gateway"

  tesp-db:
    image: mongo:latest
    container_name: tesp-db
    volumes:
      - ./docker/mongodb/data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=tesp
    ports:
      - "8081:27017"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1

  pulsar_rest:
    build:
      context: ./docker/pulsar_rest
      dockerfile: Dockerfile
      target: development
    image: pulsar_rest
    container_name: pulsar-rest
    privileged: true
    expose:
      - "8913"
    volumes:
      - ./docker/pulsar_rest/app.yml:/opt/pysetup/app.yml
# DIND - problem with resource limitation, missing cgroups inside
#      - ./docker/pulsar_rest/data/:/opt/pysetup/files/staging/
# DOOD
      - /opt/pysetup/files/staging/:/opt/pysetup/files/staging/
      - /var/run/docker.sock:/var/run/docker.sock

  service-s3:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./docker/dts/s3/data:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: 123456789
    command: server --console-address ":9001" /data

  service-ftp:
    build:
      context: ./docker/dts/ftp/
    image: ftp
    ports:
      - '2121-2130:2121-2130'
    depends_on:
      - service-s3

  service-http:
    build:
      context: ./docker/dts/http/
    image: http
    ports:
      - "5000:5000"  # Map Flask server's port to host
    volumes:
      - ./docker/dts/http/data:/data  # Mount the uploads folder to the container to persist uploaded files
  #    command: uvicorn main:app --host 0.0.0.0 --port 8000

  tests-clients:
    build:
      context: ./docker/dts/clients/
    image: clients
    depends_on:
      - tests-clients-init
  
  tests-clients-init:
    build:
      context: ./docker/dts/clients/
      dockerfile: Dockerfile.tests-init
    depends_on:
      - service-s3
      - service-ftp
      - service-http

# Some cloud providers may require a lower MTU!
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1442
